<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title type="text" xml:lang="en">Rubén Hernández-Murillo: Coding Annoyances</title>
    <description>Research, Writings + Code</description>
    <link>http://rubenhm.org/</link>
    <author>
      <name>Rubén Hernández-Murillo</name>
    </author>
    <rights>Copyright (c) 2014 Rubén Hernández-Murillo</rights>
    <atom:link href="http://rubenhm.org/feed.xml" rel="self" type="application/rss+xml" />
    
      
    
      
    
    
      <item>
        <title>Export PNG charts from Excel</title>
        <description>&lt;p&gt;Excel cannot directly export charts or &lt;code&gt;Save As&lt;/code&gt; in other image formats,
but with a simple macro one can export charts in &lt;code&gt;PNG&lt;/code&gt; format.
This format is great for including charts in LaTeX documents
with &lt;code&gt;\includegraphics{chart.png}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The macro can be stored in the personal macro file &lt;code&gt;PERSONAL.XLSB&lt;/code&gt;.
Excel 2010 places the file in the following location:
&lt;code&gt;C:\Users\yourusername\AppData\Roaming\Microsoft\Excel\XLSTART&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This file is hidden when first starting Excel. To unhide, perform
the following steps.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;+ View -&amp;gt; Unhide
    + Unhide personal macros file.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now select the &lt;code&gt;View -&amp;gt; Macro&lt;/code&gt; or the &lt;code&gt;Developer -&amp;gt; Macros&lt;/code&gt; menu items to create a new macro.
The macro for saving the generated &lt;code&gt;PNG&lt;/code&gt; files is as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Sub Export_ActiveChart_as_PNG()
&amp;#39;
&amp;#39; Export_ActiveChart_as_PNG Macro
&amp;#39; Export Active Chart as PNG
&amp;#39;
        ActiveChart.Export Filename:=&amp;quot;C:\path\to\save\excelcharts\&amp;quot; &amp;amp; ActiveSheet.Name &amp;amp; &amp;quot;.png&amp;quot;, Filtername:=&amp;quot;PNG&amp;quot;

End Sub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The generated &lt;code&gt;PNG&lt;/code&gt; file can now be used in &lt;code&gt;tex&lt;/code&gt; documents as usual.&lt;/p&gt;

&lt;p&gt;Today, however, I found another alternative, but it doesn&amp;#39;t work as well. &lt;/p&gt;

&lt;h1&gt;Save chart as &lt;code&gt;PDF&lt;/code&gt;&lt;/h1&gt;

&lt;p&gt;Excel 2010 provides a &lt;code&gt;Save As&lt;/code&gt; option that can save the active chart as a &lt;code&gt;PDF&lt;/code&gt; file. 
The file can be used directly with &lt;code&gt;\includegraphics{chart.pdf}&lt;/code&gt; 
but the resulting &lt;code&gt;PDF&lt;/code&gt; has a significant white margin all around that 
would have to be cropped for better results. 
Cropping a &lt;code&gt;PDF&lt;/code&gt; without the full version of Acrobat can be a problem, so the &lt;code&gt;PNG&lt;/code&gt; route works  better, in my opinion.&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Sep 2014 00:00:00 -0500</pubDate>
        <link>http://rubenhm.org/blog/2014/09/25/export-png-charts-from-excel/</link>
        <guid isPermaLink="true">http://rubenhm.org/blog/2014/09/25/export-png-charts-from-excel/</guid>
      </item>
      
    
    
      <item>
        <title>Pandoc, beamer, MAKE workflow</title>
        <description>&lt;p&gt;The goal is to produce a nicely formatted beamer presentation in pdf format without losing focus away from the slides content by constantly meddling with the latex styles.&lt;/p&gt;

&lt;p&gt;The solution is to write the presentation core content in &lt;code&gt;markdown&lt;/code&gt;, then process the file with &lt;code&gt;pandoc&lt;/code&gt; to obtain the pdf using a &lt;code&gt;beamer&lt;/code&gt; template, automating the process with &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We require the following tools. (I won&amp;#39;t discuss how to install them in this post.)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;Pandoc&lt;/a&gt; is a tool used to convert files between different formats. In particular, it is great for converting markdown input files into LaTeX, html, pdf, or Word format, including beamer latex presentations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.tug.org/texlive/&quot;&gt;Texlive&lt;/a&gt; is one of the many LaTeX system distributions, available for Linux and Windows.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt; is a &amp;quot;tool which controls the generation of executables and other non-source files of a program from the program&amp;#39;s source files.&amp;quot; In our case, we will use it to automate the generation of pdf files from a markdown source using texlive as the engine to compile the latex files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gnu.org/software/sed/&quot;&gt;Sed&lt;/a&gt; is a stream editor which operates on files. We will use it to automatically change strings of text using regular expressions.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;sed&lt;/code&gt; are common tools in a Linux environment, the &lt;a href=&quot;http://gnuwin32.sourceforge.net/&quot;&gt;GnuWin32 project&lt;/a&gt; provides alternatives for Windows.&lt;/p&gt;

&lt;h2&gt;Steps&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;The core of the presentation is written in markdown. See &lt;a href=&quot;http://rubenhm.org/downloads/blog/2014-08-01-pandoc-beamer-make-workflow/example_pres.md&quot;&gt;example&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;This file is run through pandoc to generate a &lt;code&gt;tex&lt;/code&gt; &lt;a href=&quot;http://rubenhm.org/downloads/blog/2014-08-01-pandoc-beamer-make-workflow/example_pres.tex&quot;&gt;file&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The above tex file is embedded as input in a beamer presentation &lt;a href=&quot;http://rubenhm.org/downloads/blog/2014-08-01-pandoc-beamer-make-workflow/presentation_example.tex&quot;&gt;template&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The presentation template file is finally processed by &lt;code&gt;xelatex&lt;/code&gt; to generate a pdf &lt;a href=&quot;http://rubenhm.org/downloads/blog/2014-08-01-pandoc-beamer-make-workflow/presentation_example.pdf&quot;&gt;presentation&lt;/a&gt;. 
We use &lt;code&gt;xelatex&lt;/code&gt; because in Windows we can use TrueType fonts, for example &lt;code&gt;Calibri&lt;/code&gt;. The example uses &lt;code&gt;Times New Roman&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The entire process is automated with &lt;code&gt;make&lt;/code&gt; (with optional use of &lt;code&gt;sed&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Running the following command in the command line will produce the final presentation pdf file and will clean up any auxiliary files, except for the intermediate tex files and the original markdown source.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;make FILE=example
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To automate the process, the &lt;code&gt;make&lt;/code&gt; command uses the following set of instructions from a file named &lt;a href=&quot;http://rubenhm.org/downloads/blog/2014-08-01-pandoc-beamer-make-workflow/makefile&quot;&gt;makefile&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;FILE=
MDFILE=$(FILE)_pres
TEXFILE=presentation_$(FILE)
INPUTS=

all:  pdf; make clean

.PHONY: all clean

pdf:
    # Use pandoc to convert the main markdown source to latex
    pandoc $(MDFILE).md --slide-level 2 -t beamer -o $(MDFILE).tex
    # Use sed to replace a string in the latex file that sets spaces in itemize environment
    sed -i &amp;quot;s/\\itemsep1pt\\parskip0pt\\parsep0pt/\\itemsep1.6pt\\parskip1.6pt\\parsep0pt/g&amp;quot; $(MDFILE).tex
    # Apply xelatex twice to obtain the pdf
    xelatex $(TEXFILE).tex
    xelatex $(TEXFILE).tex  

# Remove unnecessary files
clean: 
    -rm -f $(TEXFILE).log $(TEXFILE).aux  $(TEXFILE).toc  $(TEXFILE).snm $(TEXFILE).nav $(TEXFILE).out $(TEXFILE).fdb_latemk $(TEXFILE).synctex.gz $(TEXFILE).fls
    -rm -f sed*.*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;--slide-level 2&lt;/code&gt; option indicates we can use &lt;code&gt;##&lt;/code&gt; in the markdown file to generate new slides, and &lt;code&gt;###&lt;/code&gt; to create subheadings inside a slide. A single &lt;code&gt;#&lt;/code&gt; creates sections.&lt;/p&gt;

&lt;h2&gt;Attributions&lt;/h2&gt;

&lt;p&gt;This post is my implementation (really a simplified version) of this post in &lt;a href=&quot;http://jeromyanglim.blogspot.com/2012/07/beamer-pandoc-markdown.html&quot;&gt;Jeromy Anglim&amp;#39;s blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pictures used in the example are attributed to &lt;a href=&quot;http://placekitten.com/attribution.html&quot;&gt;placekitten.com&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Aug 2014 00:00:00 -0500</pubDate>
        <link>http://rubenhm.org/blog/2014/08/01/pandoc-beamer-make-workflow/</link>
        <guid isPermaLink="true">http://rubenhm.org/blog/2014/08/01/pandoc-beamer-make-workflow/</guid>
      </item>
      
    
      
    
    
      <item>
        <title>How to collaborate with Scientific Workplace users</title>
        <description>&lt;p&gt;When writing papers in latex, I usually use WinEdt and MikTeX (more recently,
I started using SublimeText with TexLive), but most of my co-authors only use
&lt;em&gt;ScientificWorkplace&lt;/em&gt; with the dated TrueTeX latex engine.&lt;/p&gt;

&lt;p&gt;In preparing papers, I like to have the following folder structure:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;bibfiles/
project-files/
    |
    |-plots/
    |-tables/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But this does not work for SWP because in order to compile the main document, it copies the  tex file to a temporary file under a temporary folder, and therefore, SWP cannot find any folders or graphics included with
&lt;code&gt;\input&lt;/code&gt; or &lt;code&gt;\includegraphics&lt;/code&gt; that are in the above subfolders. SWP also cannot find any &lt;code&gt;bib&lt;/code&gt; files, unless the &lt;code&gt;bibfiles&lt;/code&gt; folder is appropriately selected in the general settings, or the &lt;code&gt;bib&lt;/code&gt; file is copied to the standard folder: &lt;code&gt;c:\SWP folder\TCITeX\TeX\BibTeX\bib\&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The solution, which does not require to manually edit any settings file under SWP (which does not work anyway), involves three steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;To fix the issue with finding graphics files (e.g, &lt;code&gt;png&lt;/code&gt; or &lt;code&gt;pdf&lt;/code&gt; files, because I use &lt;code&gt;pdflatex&lt;/code&gt;), include the following commands in the preamble. Notice the two sets of braces and the trailing &lt;code&gt;/&lt;/code&gt;. The path can be absolute or relative (see 2).&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span class=&quot;k&quot;&gt;\usepackage&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;/span&gt;graphicx&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\graphicspath&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;{&lt;/span&gt;/path/to/graphics/folder/&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To be able to work with relative paths and subfolders we have to prevent SWP from copying the main tex file to a temporary folder when compiling. This is achieved by setting the main tex files as a &lt;code&gt;master document&lt;/code&gt;. Include the following code somewhere after &lt;code&gt;\begin{document}&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span class=&quot;c&quot;&gt;%TCIMACRO{\QSubDoc{Include subdoc}{\input{tables/subdoc.tex}}}%&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%BeginExpansion&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;\input&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;{&lt;/span&gt;tables/subdoc.tex&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;%EndExpansion&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file &lt;code&gt;subdoc.tex&lt;/code&gt; located in the &lt;code&gt;tables/&lt;/code&gt; folder has to include the following code (and it can be empty otherwise; it can also be located in the main folder, but the paths above have to reflect this):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-latex&quot; data-lang=&quot;latex&quot;&gt;&lt;span class=&quot;c&quot;&gt;%TCIDATA{LaTeXparent=0,0,main.tex}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;main.tex&lt;/code&gt; is the name of the master file. For additional files in the &lt;code&gt;plots&lt;/code&gt; and &lt;code&gt;tables&lt;/code&gt; subfolders, the TCI macro is not needed, and the usual &lt;code&gt;\input&lt;/code&gt; or &lt;code&gt;\includegraphics&lt;/code&gt; commands will work and the tex or graphics files will be found.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As mentioned before, to find the correct &lt;code&gt;bib&lt;/code&gt; files, the options are to change the standard path in SWP&amp;#39;s general settings or to copy the &lt;code&gt;bib&lt;/code&gt; files to the standard path under the SWP installation folder,
&lt;code&gt;c:\SWP folder\TCITeX\TeX\BibTeX\bib\&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, it goes without saying that your coauthors should always save project files in &lt;code&gt;Portable LaTeX&lt;/code&gt; format.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 01 Apr 2014 00:00:00 -0500</pubDate>
        <link>http://rubenhm.org/blog/2014/04/01/how-to-collaborate-with-scientific-workplace-users/</link>
        <guid isPermaLink="true">http://rubenhm.org/blog/2014/04/01/how-to-collaborate-with-scientific-workplace-users/</guid>
      </item>
      
    
  </channel>
</rss>
